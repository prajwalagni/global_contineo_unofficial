// main.dart
import 'package:flutter/material.dart';
import 'package:global_contineo_unofficial/pages/settings.dart';
import 'package:provider/provider.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:global_contineo_unofficial/pages/attendance/attendance.dart';
import 'package:global_contineo_unofficial/pages/attendance/attendance_details.dart';
import 'package:global_contineo_unofficial/pages/cie/cie.dart';
import 'package:global_contineo_unofficial/pages/cie/cie_details.dart';
import 'package:global_contineo_unofficial/pages/homepage.dart';
import 'package:global_contineo_unofficial/pages/login.dart';
import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart'; // auto-generated by flutterfire configure
import 'package:global_contineo_unofficial/theme_provider.dart'; // Import your ThemeProvider
import 'package:global_contineo_unofficial/pages/about_page.dart'; // Import your new AboutPage
import 'package:global_contineo_unofficial/pages/feedback_page.dart'; // Import your new FeedbackPage
import 'package:flutter_dotenv/flutter_dotenv.dart'; // Import flutter_dotenv

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  // Load the .env file
  await dotenv.load(fileName: ".env"); // This loads the .env file
  await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);

  runApp(
    ChangeNotifierProvider(
      create: (context) => ThemeProvider(),
      child: Consumer<ThemeProvider>(
        builder: (context, themeProvider, child) {
          return MaterialApp(
            title: 'GAT Contineo',
            debugShowCheckedModeBanner: false,
            theme: ThemeData(
              colorScheme: ColorScheme.fromSeed(
                seedColor: Colors.lightBlueAccent,
                primary: Colors.lightBlueAccent,
                brightness: Brightness.light,
              ),
              useMaterial3: true,
            ),
            darkTheme: ThemeData(
              colorScheme: ColorScheme.fromSeed(
                seedColor: Colors.lightBlueAccent,
                primary: Colors.lightBlueAccent[700],
                brightness: Brightness.dark,
              ),
              useMaterial3: true,
            ),
            themeMode:
                themeProvider.selectedTheme == 'system'
                    ? ThemeMode.system
                    : themeProvider.selectedTheme == 'light'
                    ? ThemeMode.light
                    : ThemeMode.dark,
            home: const MyApp(),
            routes: {
              '/home': (context) => const Homepage(),
              '/login': (context) => const LoginPage(),
              '/attendance': (context) => const AttendanceHomePage(),
              '/attendance/details': (context) => const AttendanceDetails(),
              '/cie': (context) => const CiePage(),
              '/cie/details': (context) => const CieDetailsPage(),
              '/settings': (context) => const SettingsPage(),
              '/about':
                  (context) => const AboutPage(), // Add the new route here
              '/feedback':
                  (context) =>
                      const FeedbackPage(), // Add the new feedback route
            },
          );
        },
      ),
    ),
  );
}

class MyApp extends StatefulWidget {
  const MyApp({super.key});

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  bool _isLoggedIn = false;
  late SharedPreferences prefs;

  @override
  void initState() {
    super.initState();
    _checkLoginStatus();
  }

  Future<void> _checkLoginStatus() async {
    prefs = await SharedPreferences.getInstance();
    setState(() {
      _isLoggedIn = prefs.getBool('isLoggedIn') ?? false;
    });
  }

  @override
  Widget build(BuildContext context) {
    return _isLoggedIn ? const Homepage() : const LoginPage();
  }
}
